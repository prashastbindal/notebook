plugins {
    id 'java'
    id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"
}

version '0.2'

sourceCompatibility = 1.9

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'org.slf4j:slf4j-simple:1.8.0-beta4';
    compile 'io.javalin:javalin:3.7.0';
    compile 'com.github.spullara.mustache.java:compiler:0.9.5'
    compile 'org.sql2o:sql2o:1.5.4'
    compile group: 'net.sourceforge.tess4j', name: 'tess4j', version: '4.5.1'
    compile group: 'com.github.jai-imageio', name: 'jai-imageio-core', version: '1.4.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.730'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.10'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
            'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
            'Main-Class': 'server.Server'
        )
    }

    zip64 = true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

task stage(dependsOn: ['build', 'clean', 'jar'])
build.mustRunAfter clean
