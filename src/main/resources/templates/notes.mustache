<!doctype html>
<html>
<head>
    <title>NoteBook</title>
    {{> header}}

    <link href="/css/simple-sidebar.css" rel="stylesheet">
</head>
<body>
<main>
{{> navbar}}

<div class="d-flex" id="wrapper">
    <!-- Sidebar -->
    <div class="bg-light border-right" id="sidebar-wrapper">
        <div class="sidebar-heading">
            <div id="course-name-header">{{ courseName }}</div>
        </div>
        <div class="show sidebar-heading">
            <form id="search-form">
                <div class="input-group mb-3">
                    <input class="form-control" name="search-notes" type="text" id="searchbar" placeholder="Search Notes">
                    <div class="input-group-append">
                        <button class="btn btn-primary dropdown-toggle" type="button"
                        id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Search By
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                            <button class="dropdown-item" type="button"
                                onclick="searchcallback('title', {{courseId}})">Title</button>
                            <button class="dropdown-item" type="button"
                                onclick="searchcallback('body', {{courseId}})">Body</button>
                            <button class="dropdown-item" type="button"
                                onclick="searchcallback('creator', {{courseId}})">Creator</button>
                            <button class="dropdown-item" type="button"
                                onclick="searchcallback('date', {{courseId}})">Date</button>
                        </div>
                    </div>
                </div>
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sort By
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <button class="dropdown-item" type="button"
                            onclick="sortcallback('title', {{courseId}})">Title</button>
                        <button class="dropdown-item" type="button" onclick="sortcallback('date', {{courseId}})">Date
                            Added</button>
                        <button class="dropdown-item" type="button" onclick="sortcallback('upvotes', {{courseId}})">Upvotes</button>
                    </div>
                    <button class="btn btn-outline-primary my-2 my-sm-0"
                        id="reset-button" onClick="history.go(0);">
                        Reset filters</button>
                </div>
                <div>
                    <a class="btn btn-outline-primary my-2 my-sm-0"
                        id="add-note-button"
                        href="/courses/{{courseId}}/addNote">Add a Note</a>
                </div>
            </form>
        </div>
        <div class="list-group list-group-flush" id="note-list">
            {{#noteList}}
                <a data-courseId="{{courseId}}" data-noteId="{{id}}"
                   class="note-select list-group-item
                   list-group-item-action">{{ title }} by {{ creator }}
                        <br> Upvotes: {{upvotes}} </a>
            {{/noteList}}
        </div>
    </div>
    <!-- /#sidebar-wrapper -->

    <!-- Page Content -->
    <div id="page-content-wrapper">
        <div class="container-fluid" id="note-frame-container">
            <iframe id="note-frame" src=""></iframe>
        </div>
    </div>
    <!-- /#page-content-wrapper -->

</div>

<style>
    #note-frame-container {
        height: 100%;
    }
    #note-frame {
        border: none;
        width: 100%;
        height: 100%;
    }
</style>

<script>
$(function(){
    $(".note-select").click(function(e) {
        $('#note-list .active').removeClass('active');
        $(this).addClass('active');

        e.preventDefault();
        $("#note-frame").attr("src", "".concat("/courses/", e.target.dataset.courseid, "/notes-preview/", e.target.dataset.noteid));
    });
});

    $('#search-form').submit(function(ev) {
        ev.preventDefault();
        // ajax stuff...
    });

    function parse(str) {
        var args = [].slice.call(arguments, 1),
            i = 0;

        return str.replace(/%s/g, () => args[i++]);
    }
    var noteItemFormat = '<a data-courseId=%s data-noteId=%s class="note-select list-group-item' +
                                               ' list-group-item-action">%s by %s %s  Upvotes: %s </a>'


    function searcher(courseId, searchKey, newUrl){
        console.log("search button clicked")
        console.log(searchKey)
        $.ajax({
             type: "GET",
             url: newUrl,
             contentType: "application/json",
             success: function (data, status, jqXHR) {
                $("#note-list").empty();

                data.map(function(note){
                    $("#note-list").append(parse(noteItemFormat, note.courseId.toString(), note.id.toString(),
                    note.title.toString(), note.creator.toString(), note.date.toString(), note.upvotes.toString()))
                });

                $(".note-select").click(function(e) {
                        $('#note-list .active').removeClass('active');
                        $(this).addClass('active');

                        e.preventDefault();
                        $("#note-frame").attr("src", "".concat("/courses/", e.target.dataset.courseid, "/notes-preview/", e.target.dataset.noteid));
                    });
             },

             error: function (jqXHR, status) {
                 // error handler
                 console.log(jqXHR);
                 alert("Empty or invalid search input");
             }
         });

    }

    var notes;
    function getAllNotes(courseId, callback=null, callback_args=null){
    //after ajax call, the callback function is executed with arguments : args...., notes
            $.ajax({
                 type: "GET",
                 url: "/courses/" + courseId.toString() + "/notes/json",
                 contentType: "application/json",
                 success: function (data, status, jqXHR) {
                    notes = data;
                    if(callback!=null){
                       callback(callback_args, notes);
                    }
                 },

                 error: function (jqXHR, status) {
                     // error handler
                     console.log(jqXHR);
                     alert('fail' + status.code);
                 }
             });

        }

    function sorter(args, notes){
        sortBy = args[0]
        notes.sort(function(a, b) {
            if (sortBy == "title"){
                return a.title.toUpperCase().localeCompare(b.title.toUpperCase());
            }else if(sortBy == "date"){
                // check year is greater
                if(a.date.substring(6).toUpperCase().localeCompare(b.date.substring(6).toUpperCase()) == 0){
                    return a.date.toUpperCase().localeCompare(b.date.toUpperCase());
                 }else{
                    return a.date.substring(6).toUpperCase().localeCompare(b.date.substring(6).toUpperCase())
                 }
            }else if(sortBy == "upvotes"){
                return a.upvotes -  b.upvotes;
            }else{
                alert(sortBy + ' sort option not supported ! ')
            }

        });
        $("#note-list").empty();

        notes.map(function(note){
            $("#note-list").append(parse(noteItemFormat, note.courseId.toString(), note.id.toString(),
                                note.title.toString(), note.creator.toString(), note.date.toString(), note.upvotes.toString()))
        });

        $(".note-select").click(function(e) {
                $('#note-list .active').removeClass('active');
                $(this).addClass('active');

                e.preventDefault();
                $("#note-frame").attr("src", "".concat("/courses/", e.target.dataset.courseid, "/notes-preview/", e.target.dataset.noteid));
            });
    }

    function sortcallback(sortBy, courseId){
        console.log("sorting by " + sortBy);
        getAllNotes(courseId, sorter, [sortBy]);

    };

    function searchcallback(searchBy, courseId) {
        var searchKey = $("#searchbar").val();
        var url = "";
        if (searchBy == "title") {
            url = "/courses/" + courseId.toString() + "/notes/searchName/"+ searchKey;
        } else if (searchBy == "body") {
            url = "/courses/" + courseId.toString() + "/notes/searchContent/"+ searchKey;
        } else if (searchBy == "creator") {
            url = "/courses/" + courseId.toString() + "/notes/searchCreator/"+ searchKey;
        } else if (searchBy == "date") {
            searchKey = searchKey.replace("/", "").replace("/", "");
            url = "/courses/" + courseId.toString() + "/notes/searchDate/"+ searchKey;
        }
        searcher(courseId, searchKey, url);
    };

</script>

<!-- optional script if we want to make the sidebar toggleable -->
<!--<script>-->
<!--    $("#menu-toggle").click(function(e) {-->
<!--        e.preventDefault();-->
<!--        $("#wrapper").toggleClass("toggled");-->
<!--    });-->
<!--</script>-->

</main>
{{> footer}}

</body>
</html>